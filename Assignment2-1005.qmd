---
title: "Assignment2-Sok1005"
format: pdf
editor: visual
---

# Task 1

```{r}
#load data
rm(list = ls())
library(tidyverse)

url <- "https://raw.githubusercontent.com/uit-sok-1005-v23/uit-sok-1005-v23.github.io/main/storedata.csv"
df <- read.csv(url, stringsAsFactors = FALSE)

```

## 1.1

For the last 3 months of 2017, calculate the total Sales by month, for Region 1 and Region 9 in the Customer_Segment, Corporate, and Consumer. This output is Table 1.

```{r}
#Convert to data format
df$Order_Date <- as.Date(df$Order_Date, format="%Y-%m-%d")

#Remove "Region so we can make region a numeric
df$Region <- gsub("Region ", "", df$Region) 
df$Region <- as.numeric(df$Region) 

#Making the tabel
table1 <- df %>%
  filter(Order_Date >= as.Date("2017-10-01") & Order_Date <= as.Date("2017-12-31"),
         Region %in% c(1, 9),
         Customer_Segment %in% c("Corporate", "Consumer")) %>%
  mutate(Month = format(Order_Date, "%Y-%m")) %>%
  group_by(Month, Region, Customer_Segment) %>%
  summarize(Total_Sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
  arrange(Month, Region, Customer_Segment)

print(table1)

```

## 1.2

Make a plot of the monthly total Sales in Region 1 and Region 13 in 2015, 2016, and 2017. This output is Figure 1

```{r}
df %>%
  filter(Region %in% c(1, 13), format(Order_Date, "%Y") %in% c("2015", "2016", "2017")) %>%
  mutate(Month = format(Order_Date, "%Y-%m")) %>%
  group_by(Month, Region) %>%
  summarize(Total_sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(x = Month, y = Total_sales, color = factor(Region), group = Region))+
  geom_line() +
  geom_point() +
  labs(title = "Figure 1", y= "Total sales", x = "Months", color = "Region") +
  theme_minimal()
```

## 1.3

In Figure 1, identify the months where the total Sales in Region 13 is greater than the total Sales in Region 1. This output is Table 2.

```{r}
table2 <- df %>%
  filter(Region %in% c(1, 13), format(Order_Date, "%Y") %in% c("2015", "2016", "2017")) %>%
  mutate(Month = format(Order_Date, "%Y-%m")) %>%
  group_by(Month, Region) %>%
  summarize(Total_sales = sum(Sales, na.rm = TRUE), .groups = "drop") %>%
  spread(Region, Total_sales) %>%
  filter(`13` > `1`) %>%
  select(Month, `1`, `13`)

print(table2)
```

## 1.4

Find the average Profit per Customer_Segment and Product_Category in 2017, for all regions except Region 3, 5 and 8. What segment produced the highest average profit? This output is Table 3.

```{r}
#Making a dataframe in order from highest to shortest profit
table3 <- df %>%
  filter(format(Order_Date, "%Y") == "2017", !Region %in% c(3, 5, 8)) %>%
  group_by(Customer_Segment, Product_Category) %>%
  summarize(Average_Profit = mean(Profit, na.rm = TRUE), .groups = "drop") %>%
  arrange(desc(Average_Profit)) 
print(table3)
```

```{r}
# Print the segment with heighest profit
highest_profit_segment <- table3[1, ]
print(highest_profit_segment)
```

# Task 2

```{r}
library(rvest)
url <- "https://www.motor.no/aktuelt/motors-store-vintertest-av-rekkevidde-pa-elbiler/217132"
webpage <- read_html(url)
html_table(html_nodes(webpage, "div table")[[1]])
```

## 2.a

Create a ggplot, where “stop” is on the y-axis, and “wltp” is on the x-axis. Add a 45-degree line showing how far the cars “really” should have driven (red line in my fig below). Create an appropriate title and accompanying character text that explains what is “happening” in the figure.

```{r}
 df2 <- url %>%
   read_html() %>% 
   html_nodes("table") %>%  
   html_table() %>% .[[1]]
 #Giving each column a title
 names(df2) <- c("Modell (temp. varierte fra 0° til -10°)", "WLTP-tall", "STOPP", "Avvik")
 
 head(df2, 34)
```

```{r}
#Remove the first row
df2 <- df2[-1,]
 
#Duplicate the columns so it will be easier to work with
df2 <- separate(df2, col=`WLTP-tall`, into=c('WLTP-tall', 'NaN'), sep=' ')
df2 <- separate(df2, col=`STOPP`, into=c('STOPP', 'Remove'), sep=' ')

df2 <- df2[,-3]
df2 <- df2[,-4]

df2$`WLTP-tall` <- as.numeric(df2$`WLTP-tall`)
df2$STOPP <- as.numeric(df2$STOPP)
```

```{r}
#Creating the plot
#Plot in the graph
df2 %>%
  ggplot(aes(x= `WLTP-tall` , y = STOPP)) +
  geom_point() +
  geom_abline(intercept = 0, slope = 1, size = 0.5, col = 'red') +
  labs(x = 'WLTP', y = 'STOP', title  = 'Motor’s Range test') +
  theme_minimal()
```

The plot shows relationship between the mileage the car is stated to have(x-axis) and what it actually has(y-axis). The red line shows how far the cars is really supposed to go. As we can see none of the cars is meeting at the red line. Still there's a similarity between the WLTP and the stop.

## 2.b

None of the car brands reach the red line (expected mileage). But there is a clear positive correlation between what is promised and actual mileage.

```{r}
#Making the actual mileage
df2[is.na(df2) | df2=="x"] = NA

df3 <- lm(`STOPP` ~ `WLTP-tall`, data = df2)
```

```{r}
#plot the actual mileage
df2 %>%
  ggplot(aes(x = `WLTP-tall`, y = STOPP)) + 
  geom_point()+
  geom_abline(intercept = 0, slope = 1, size = 0.5, col = 'red') +
  stat_smooth(method = "lm", col = "blue") +
  xlab('WLTP') +
  ylab('STOP') +
  ggtitle('Motor’s Range test') +
  theme_minimal()
```

The blue line shows a linear regression of all the actual ranges.
